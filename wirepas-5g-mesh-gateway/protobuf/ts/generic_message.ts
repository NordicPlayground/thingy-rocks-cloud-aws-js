/* eslint-disable */
// @generated by protobuf-ts 2.8.2 with parameter ts_nocheck,eslint_disable
// @generated from protobuf file "generic_message.proto" (package "wirepas.proto.gateway_api", syntax proto2)
// tslint:disable
// @ts-nocheck
import type {
	BinaryReadOptions,
	BinaryWriteOptions,
	IBinaryReader,
	IBinaryWriter,
	PartialMessage,
} from '@protobuf-ts/runtime'
import {
	MESSAGE_TYPE,
	MessageType,
	UnknownFieldHandler,
	WireType,
	reflectionMergePartial,
} from '@protobuf-ts/runtime'
import {
	GetConfigsReq,
	GetConfigsResp,
	GetGwInfoReq,
	GetGwInfoResp,
	SetConfigReq,
	SetConfigResp,
	StatusEvent,
} from './config_message.js'
import {
	PacketReceivedEvent,
	SendPacketReq,
	SendPacketResp,
} from './data_message.js'
import {
	GetScratchpadStatusReq,
	GetScratchpadStatusResp,
	ProcessScratchpadReq,
	ProcessScratchpadResp,
	UploadScratchpadReq,
	UploadScratchpadResp,
} from './otap_message.js'
/**
 * @generated from protobuf message wirepas.proto.gateway_api.WirepasMessage
 */
export interface WirepasMessage {
	/**
	 * @generated from protobuf field: optional wirepas.proto.gateway_api.StatusEvent status_event = 1;
	 */
	statusEvent?: StatusEvent
	/**
	 * @generated from protobuf field: optional wirepas.proto.gateway_api.GetConfigsReq get_configs_req = 2;
	 */
	getConfigsReq?: GetConfigsReq
	/**
	 * @generated from protobuf field: optional wirepas.proto.gateway_api.GetConfigsResp get_configs_resp = 3;
	 */
	getConfigsResp?: GetConfigsResp
	/**
	 * @generated from protobuf field: optional wirepas.proto.gateway_api.SetConfigReq set_config_req = 4;
	 */
	setConfigReq?: SetConfigReq
	/**
	 * @generated from protobuf field: optional wirepas.proto.gateway_api.SetConfigResp set_config_resp = 5;
	 */
	setConfigResp?: SetConfigResp
	/**
	 * @generated from protobuf field: optional wirepas.proto.gateway_api.SendPacketReq send_packet_req = 6;
	 */
	sendPacketReq?: SendPacketReq
	/**
	 * @generated from protobuf field: optional wirepas.proto.gateway_api.SendPacketResp send_packet_resp = 7;
	 */
	sendPacketResp?: SendPacketResp
	/**
	 * @generated from protobuf field: optional wirepas.proto.gateway_api.PacketReceivedEvent packet_received_event = 8;
	 */
	packetReceivedEvent?: PacketReceivedEvent
	/**
	 * @generated from protobuf field: optional wirepas.proto.gateway_api.GetScratchpadStatusReq get_scratchpad_status_req = 9;
	 */
	getScratchpadStatusReq?: GetScratchpadStatusReq
	/**
	 * @generated from protobuf field: optional wirepas.proto.gateway_api.GetScratchpadStatusResp get_scratchpad_status_resp = 10;
	 */
	getScratchpadStatusResp?: GetScratchpadStatusResp
	/**
	 * @generated from protobuf field: optional wirepas.proto.gateway_api.UploadScratchpadReq upload_scratchpad_req = 11;
	 */
	uploadScratchpadReq?: UploadScratchpadReq
	/**
	 * @generated from protobuf field: optional wirepas.proto.gateway_api.UploadScratchpadResp upload_scratchpad_resp = 12;
	 */
	uploadScratchpadResp?: UploadScratchpadResp
	/**
	 * @generated from protobuf field: optional wirepas.proto.gateway_api.ProcessScratchpadReq process_scratchpad_req = 13;
	 */
	processScratchpadReq?: ProcessScratchpadReq
	/**
	 * @generated from protobuf field: optional wirepas.proto.gateway_api.ProcessScratchpadResp process_scratchpad_resp = 14;
	 */
	processScratchpadResp?: ProcessScratchpadResp
	/**
	 * @generated from protobuf field: optional wirepas.proto.gateway_api.GetGwInfoReq get_gateway_info_req = 15;
	 */
	getGatewayInfoReq?: GetGwInfoReq
	/**
	 * @generated from protobuf field: optional wirepas.proto.gateway_api.GetGwInfoResp get_gateway_info_resp = 16;
	 */
	getGatewayInfoResp?: GetGwInfoResp
}
/**
 * @generated from protobuf message wirepas.proto.gateway_api.CustomerMessage
 */
export interface CustomerMessage {
	/**
	 * Customer name is needed to avoid any collision between different customer implementation
	 *
	 * @generated from protobuf field: string customer_name = 1;
	 */
	customerName: string // Can be freely used for enhancing API by customers
}
/**
 * @generated from protobuf message wirepas.proto.gateway_api.GenericMessage
 */
export interface GenericMessage {
	/**
	 * @generated from protobuf field: optional wirepas.proto.gateway_api.WirepasMessage wirepas = 1;
	 */
	wirepas?: WirepasMessage
	/**
	 * @generated from protobuf field: optional wirepas.proto.gateway_api.CustomerMessage customer = 2;
	 */
	customer?: CustomerMessage
}
// @generated message type with reflection information, may provide speed optimized methods
class WirepasMessage$Type extends MessageType<WirepasMessage> {
	constructor() {
		super('wirepas.proto.gateway_api.WirepasMessage', [
			{ no: 1, name: 'status_event', kind: 'message', T: () => StatusEvent },
			{
				no: 2,
				name: 'get_configs_req',
				kind: 'message',
				T: () => GetConfigsReq,
			},
			{
				no: 3,
				name: 'get_configs_resp',
				kind: 'message',
				T: () => GetConfigsResp,
			},
			{ no: 4, name: 'set_config_req', kind: 'message', T: () => SetConfigReq },
			{
				no: 5,
				name: 'set_config_resp',
				kind: 'message',
				T: () => SetConfigResp,
			},
			{
				no: 6,
				name: 'send_packet_req',
				kind: 'message',
				T: () => SendPacketReq,
			},
			{
				no: 7,
				name: 'send_packet_resp',
				kind: 'message',
				T: () => SendPacketResp,
			},
			{
				no: 8,
				name: 'packet_received_event',
				kind: 'message',
				T: () => PacketReceivedEvent,
			},
			{
				no: 9,
				name: 'get_scratchpad_status_req',
				kind: 'message',
				T: () => GetScratchpadStatusReq,
			},
			{
				no: 10,
				name: 'get_scratchpad_status_resp',
				kind: 'message',
				T: () => GetScratchpadStatusResp,
			},
			{
				no: 11,
				name: 'upload_scratchpad_req',
				kind: 'message',
				T: () => UploadScratchpadReq,
			},
			{
				no: 12,
				name: 'upload_scratchpad_resp',
				kind: 'message',
				T: () => UploadScratchpadResp,
			},
			{
				no: 13,
				name: 'process_scratchpad_req',
				kind: 'message',
				T: () => ProcessScratchpadReq,
			},
			{
				no: 14,
				name: 'process_scratchpad_resp',
				kind: 'message',
				T: () => ProcessScratchpadResp,
			},
			{
				no: 15,
				name: 'get_gateway_info_req',
				kind: 'message',
				T: () => GetGwInfoReq,
			},
			{
				no: 16,
				name: 'get_gateway_info_resp',
				kind: 'message',
				T: () => GetGwInfoResp,
			},
		])
	}
	create(value?: PartialMessage<WirepasMessage>): WirepasMessage {
		const message = {}
		globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
			enumerable: false,
			value: this,
		})
		if (value !== undefined)
			reflectionMergePartial<WirepasMessage>(this, message, value)
		return message
	}
	internalBinaryRead(
		reader: IBinaryReader,
		length: number,
		options: BinaryReadOptions,
		target?: WirepasMessage,
	): WirepasMessage {
		let message = target ?? this.create(),
			end = reader.pos + length
		while (reader.pos < end) {
			let [fieldNo, wireType] = reader.tag()
			switch (fieldNo) {
				case /* optional wirepas.proto.gateway_api.StatusEvent status_event */ 1:
					message.statusEvent = StatusEvent.internalBinaryRead(
						reader,
						reader.uint32(),
						options,
						message.statusEvent,
					)
					break
				case /* optional wirepas.proto.gateway_api.GetConfigsReq get_configs_req */ 2:
					message.getConfigsReq = GetConfigsReq.internalBinaryRead(
						reader,
						reader.uint32(),
						options,
						message.getConfigsReq,
					)
					break
				case /* optional wirepas.proto.gateway_api.GetConfigsResp get_configs_resp */ 3:
					message.getConfigsResp = GetConfigsResp.internalBinaryRead(
						reader,
						reader.uint32(),
						options,
						message.getConfigsResp,
					)
					break
				case /* optional wirepas.proto.gateway_api.SetConfigReq set_config_req */ 4:
					message.setConfigReq = SetConfigReq.internalBinaryRead(
						reader,
						reader.uint32(),
						options,
						message.setConfigReq,
					)
					break
				case /* optional wirepas.proto.gateway_api.SetConfigResp set_config_resp */ 5:
					message.setConfigResp = SetConfigResp.internalBinaryRead(
						reader,
						reader.uint32(),
						options,
						message.setConfigResp,
					)
					break
				case /* optional wirepas.proto.gateway_api.SendPacketReq send_packet_req */ 6:
					message.sendPacketReq = SendPacketReq.internalBinaryRead(
						reader,
						reader.uint32(),
						options,
						message.sendPacketReq,
					)
					break
				case /* optional wirepas.proto.gateway_api.SendPacketResp send_packet_resp */ 7:
					message.sendPacketResp = SendPacketResp.internalBinaryRead(
						reader,
						reader.uint32(),
						options,
						message.sendPacketResp,
					)
					break
				case /* optional wirepas.proto.gateway_api.PacketReceivedEvent packet_received_event */ 8:
					message.packetReceivedEvent = PacketReceivedEvent.internalBinaryRead(
						reader,
						reader.uint32(),
						options,
						message.packetReceivedEvent,
					)
					break
				case /* optional wirepas.proto.gateway_api.GetScratchpadStatusReq get_scratchpad_status_req */ 9:
					message.getScratchpadStatusReq =
						GetScratchpadStatusReq.internalBinaryRead(
							reader,
							reader.uint32(),
							options,
							message.getScratchpadStatusReq,
						)
					break
				case /* optional wirepas.proto.gateway_api.GetScratchpadStatusResp get_scratchpad_status_resp */ 10:
					message.getScratchpadStatusResp =
						GetScratchpadStatusResp.internalBinaryRead(
							reader,
							reader.uint32(),
							options,
							message.getScratchpadStatusResp,
						)
					break
				case /* optional wirepas.proto.gateway_api.UploadScratchpadReq upload_scratchpad_req */ 11:
					message.uploadScratchpadReq = UploadScratchpadReq.internalBinaryRead(
						reader,
						reader.uint32(),
						options,
						message.uploadScratchpadReq,
					)
					break
				case /* optional wirepas.proto.gateway_api.UploadScratchpadResp upload_scratchpad_resp */ 12:
					message.uploadScratchpadResp =
						UploadScratchpadResp.internalBinaryRead(
							reader,
							reader.uint32(),
							options,
							message.uploadScratchpadResp,
						)
					break
				case /* optional wirepas.proto.gateway_api.ProcessScratchpadReq process_scratchpad_req */ 13:
					message.processScratchpadReq =
						ProcessScratchpadReq.internalBinaryRead(
							reader,
							reader.uint32(),
							options,
							message.processScratchpadReq,
						)
					break
				case /* optional wirepas.proto.gateway_api.ProcessScratchpadResp process_scratchpad_resp */ 14:
					message.processScratchpadResp =
						ProcessScratchpadResp.internalBinaryRead(
							reader,
							reader.uint32(),
							options,
							message.processScratchpadResp,
						)
					break
				case /* optional wirepas.proto.gateway_api.GetGwInfoReq get_gateway_info_req */ 15:
					message.getGatewayInfoReq = GetGwInfoReq.internalBinaryRead(
						reader,
						reader.uint32(),
						options,
						message.getGatewayInfoReq,
					)
					break
				case /* optional wirepas.proto.gateway_api.GetGwInfoResp get_gateway_info_resp */ 16:
					message.getGatewayInfoResp = GetGwInfoResp.internalBinaryRead(
						reader,
						reader.uint32(),
						options,
						message.getGatewayInfoResp,
					)
					break
				default:
					let u = options.readUnknownField
					if (u === 'throw')
						throw new globalThis.Error(
							`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
						)
					let d = reader.skip(wireType)
					if (u !== false)
						(u === true ? UnknownFieldHandler.onRead : u)(
							this.typeName,
							message,
							fieldNo,
							wireType,
							d,
						)
			}
		}
		return message
	}
	internalBinaryWrite(
		message: WirepasMessage,
		writer: IBinaryWriter,
		options: BinaryWriteOptions,
	): IBinaryWriter {
		/* optional wirepas.proto.gateway_api.StatusEvent status_event = 1; */
		if (message.statusEvent)
			StatusEvent.internalBinaryWrite(
				message.statusEvent,
				writer.tag(1, WireType.LengthDelimited).fork(),
				options,
			).join()
		/* optional wirepas.proto.gateway_api.GetConfigsReq get_configs_req = 2; */
		if (message.getConfigsReq)
			GetConfigsReq.internalBinaryWrite(
				message.getConfigsReq,
				writer.tag(2, WireType.LengthDelimited).fork(),
				options,
			).join()
		/* optional wirepas.proto.gateway_api.GetConfigsResp get_configs_resp = 3; */
		if (message.getConfigsResp)
			GetConfigsResp.internalBinaryWrite(
				message.getConfigsResp,
				writer.tag(3, WireType.LengthDelimited).fork(),
				options,
			).join()
		/* optional wirepas.proto.gateway_api.SetConfigReq set_config_req = 4; */
		if (message.setConfigReq)
			SetConfigReq.internalBinaryWrite(
				message.setConfigReq,
				writer.tag(4, WireType.LengthDelimited).fork(),
				options,
			).join()
		/* optional wirepas.proto.gateway_api.SetConfigResp set_config_resp = 5; */
		if (message.setConfigResp)
			SetConfigResp.internalBinaryWrite(
				message.setConfigResp,
				writer.tag(5, WireType.LengthDelimited).fork(),
				options,
			).join()
		/* optional wirepas.proto.gateway_api.SendPacketReq send_packet_req = 6; */
		if (message.sendPacketReq)
			SendPacketReq.internalBinaryWrite(
				message.sendPacketReq,
				writer.tag(6, WireType.LengthDelimited).fork(),
				options,
			).join()
		/* optional wirepas.proto.gateway_api.SendPacketResp send_packet_resp = 7; */
		if (message.sendPacketResp)
			SendPacketResp.internalBinaryWrite(
				message.sendPacketResp,
				writer.tag(7, WireType.LengthDelimited).fork(),
				options,
			).join()
		/* optional wirepas.proto.gateway_api.PacketReceivedEvent packet_received_event = 8; */
		if (message.packetReceivedEvent)
			PacketReceivedEvent.internalBinaryWrite(
				message.packetReceivedEvent,
				writer.tag(8, WireType.LengthDelimited).fork(),
				options,
			).join()
		/* optional wirepas.proto.gateway_api.GetScratchpadStatusReq get_scratchpad_status_req = 9; */
		if (message.getScratchpadStatusReq)
			GetScratchpadStatusReq.internalBinaryWrite(
				message.getScratchpadStatusReq,
				writer.tag(9, WireType.LengthDelimited).fork(),
				options,
			).join()
		/* optional wirepas.proto.gateway_api.GetScratchpadStatusResp get_scratchpad_status_resp = 10; */
		if (message.getScratchpadStatusResp)
			GetScratchpadStatusResp.internalBinaryWrite(
				message.getScratchpadStatusResp,
				writer.tag(10, WireType.LengthDelimited).fork(),
				options,
			).join()
		/* optional wirepas.proto.gateway_api.UploadScratchpadReq upload_scratchpad_req = 11; */
		if (message.uploadScratchpadReq)
			UploadScratchpadReq.internalBinaryWrite(
				message.uploadScratchpadReq,
				writer.tag(11, WireType.LengthDelimited).fork(),
				options,
			).join()
		/* optional wirepas.proto.gateway_api.UploadScratchpadResp upload_scratchpad_resp = 12; */
		if (message.uploadScratchpadResp)
			UploadScratchpadResp.internalBinaryWrite(
				message.uploadScratchpadResp,
				writer.tag(12, WireType.LengthDelimited).fork(),
				options,
			).join()
		/* optional wirepas.proto.gateway_api.ProcessScratchpadReq process_scratchpad_req = 13; */
		if (message.processScratchpadReq)
			ProcessScratchpadReq.internalBinaryWrite(
				message.processScratchpadReq,
				writer.tag(13, WireType.LengthDelimited).fork(),
				options,
			).join()
		/* optional wirepas.proto.gateway_api.ProcessScratchpadResp process_scratchpad_resp = 14; */
		if (message.processScratchpadResp)
			ProcessScratchpadResp.internalBinaryWrite(
				message.processScratchpadResp,
				writer.tag(14, WireType.LengthDelimited).fork(),
				options,
			).join()
		/* optional wirepas.proto.gateway_api.GetGwInfoReq get_gateway_info_req = 15; */
		if (message.getGatewayInfoReq)
			GetGwInfoReq.internalBinaryWrite(
				message.getGatewayInfoReq,
				writer.tag(15, WireType.LengthDelimited).fork(),
				options,
			).join()
		/* optional wirepas.proto.gateway_api.GetGwInfoResp get_gateway_info_resp = 16; */
		if (message.getGatewayInfoResp)
			GetGwInfoResp.internalBinaryWrite(
				message.getGatewayInfoResp,
				writer.tag(16, WireType.LengthDelimited).fork(),
				options,
			).join()
		let u = options.writeUnknownFields
		if (u !== false)
			(u == true ? UnknownFieldHandler.onWrite : u)(
				this.typeName,
				message,
				writer,
			)
		return writer
	}
}
/**
 * @generated MessageType for protobuf message wirepas.proto.gateway_api.WirepasMessage
 */
export const WirepasMessage = new WirepasMessage$Type()
// @generated message type with reflection information, may provide speed optimized methods
class CustomerMessage$Type extends MessageType<CustomerMessage> {
	constructor() {
		super('wirepas.proto.gateway_api.CustomerMessage', [
			{
				no: 1,
				name: 'customer_name',
				kind: 'scalar',
				T: 9 /*ScalarType.STRING*/,
			},
		])
	}
	create(value?: PartialMessage<CustomerMessage>): CustomerMessage {
		const message = { customerName: '' }
		globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
			enumerable: false,
			value: this,
		})
		if (value !== undefined)
			reflectionMergePartial<CustomerMessage>(this, message, value)
		return message
	}
	internalBinaryRead(
		reader: IBinaryReader,
		length: number,
		options: BinaryReadOptions,
		target?: CustomerMessage,
	): CustomerMessage {
		let message = target ?? this.create(),
			end = reader.pos + length
		while (reader.pos < end) {
			let [fieldNo, wireType] = reader.tag()
			switch (fieldNo) {
				case /* string customer_name */ 1:
					message.customerName = reader.string()
					break
				default:
					let u = options.readUnknownField
					if (u === 'throw')
						throw new globalThis.Error(
							`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
						)
					let d = reader.skip(wireType)
					if (u !== false)
						(u === true ? UnknownFieldHandler.onRead : u)(
							this.typeName,
							message,
							fieldNo,
							wireType,
							d,
						)
			}
		}
		return message
	}
	internalBinaryWrite(
		message: CustomerMessage,
		writer: IBinaryWriter,
		options: BinaryWriteOptions,
	): IBinaryWriter {
		/* string customer_name = 1; */
		if (message.customerName !== '')
			writer.tag(1, WireType.LengthDelimited).string(message.customerName)
		let u = options.writeUnknownFields
		if (u !== false)
			(u == true ? UnknownFieldHandler.onWrite : u)(
				this.typeName,
				message,
				writer,
			)
		return writer
	}
}
/**
 * @generated MessageType for protobuf message wirepas.proto.gateway_api.CustomerMessage
 */
export const CustomerMessage = new CustomerMessage$Type()
// @generated message type with reflection information, may provide speed optimized methods
class GenericMessage$Type extends MessageType<GenericMessage> {
	constructor() {
		super('wirepas.proto.gateway_api.GenericMessage', [
			{ no: 1, name: 'wirepas', kind: 'message', T: () => WirepasMessage },
			{ no: 2, name: 'customer', kind: 'message', T: () => CustomerMessage },
		])
	}
	create(value?: PartialMessage<GenericMessage>): GenericMessage {
		const message = {}
		globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
			enumerable: false,
			value: this,
		})
		if (value !== undefined)
			reflectionMergePartial<GenericMessage>(this, message, value)
		return message
	}
	internalBinaryRead(
		reader: IBinaryReader,
		length: number,
		options: BinaryReadOptions,
		target?: GenericMessage,
	): GenericMessage {
		let message = target ?? this.create(),
			end = reader.pos + length
		while (reader.pos < end) {
			let [fieldNo, wireType] = reader.tag()
			switch (fieldNo) {
				case /* optional wirepas.proto.gateway_api.WirepasMessage wirepas */ 1:
					message.wirepas = WirepasMessage.internalBinaryRead(
						reader,
						reader.uint32(),
						options,
						message.wirepas,
					)
					break
				case /* optional wirepas.proto.gateway_api.CustomerMessage customer */ 2:
					message.customer = CustomerMessage.internalBinaryRead(
						reader,
						reader.uint32(),
						options,
						message.customer,
					)
					break
				default:
					let u = options.readUnknownField
					if (u === 'throw')
						throw new globalThis.Error(
							`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
						)
					let d = reader.skip(wireType)
					if (u !== false)
						(u === true ? UnknownFieldHandler.onRead : u)(
							this.typeName,
							message,
							fieldNo,
							wireType,
							d,
						)
			}
		}
		return message
	}
	internalBinaryWrite(
		message: GenericMessage,
		writer: IBinaryWriter,
		options: BinaryWriteOptions,
	): IBinaryWriter {
		/* optional wirepas.proto.gateway_api.WirepasMessage wirepas = 1; */
		if (message.wirepas)
			WirepasMessage.internalBinaryWrite(
				message.wirepas,
				writer.tag(1, WireType.LengthDelimited).fork(),
				options,
			).join()
		/* optional wirepas.proto.gateway_api.CustomerMessage customer = 2; */
		if (message.customer)
			CustomerMessage.internalBinaryWrite(
				message.customer,
				writer.tag(2, WireType.LengthDelimited).fork(),
				options,
			).join()
		let u = options.writeUnknownFields
		if (u !== false)
			(u == true ? UnknownFieldHandler.onWrite : u)(
				this.typeName,
				message,
				writer,
			)
		return writer
	}
}
/**
 * @generated MessageType for protobuf message wirepas.proto.gateway_api.GenericMessage
 */
export const GenericMessage = new GenericMessage$Type()
