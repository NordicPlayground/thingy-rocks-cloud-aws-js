/* eslint-disable */
// @generated by protobuf-ts 2.8.2 with parameter ts_nocheck,eslint_disable
// @generated from protobuf file "data_message.proto" (package "wirepas.proto.gateway_api", syntax proto2)
// tslint:disable
// @ts-nocheck
import type {
	BinaryReadOptions,
	BinaryWriteOptions,
	IBinaryReader,
	IBinaryWriter,
	PartialMessage,
} from '@protobuf-ts/runtime'
import {
	MESSAGE_TYPE,
	MessageType,
	UnknownFieldHandler,
	WireType,
	reflectionMergePartial,
} from '@protobuf-ts/runtime'
import { EventHeader, RequestHeader, ResponseHeader } from './wp_global.js'
/**
 *
 * Commands/Responses definition
 *
 * @generated from protobuf message wirepas.proto.gateway_api.SendPacketReq
 */
export interface SendPacketReq {
	/**
	 * @generated from protobuf field: wirepas.proto.gateway_api.RequestHeader header = 1;
	 */
	header?: RequestHeader
	/**
	 * @generated from protobuf field: uint32 destination_address = 2;
	 */
	destinationAddress: number
	/**
	 * @generated from protobuf field: uint32 source_endpoint = 3;
	 */
	sourceEndpoint: number
	/**
	 * @generated from protobuf field: uint32 destination_endpoint = 4;
	 */
	destinationEndpoint: number
	/**
	 * @generated from protobuf field: uint32 qos = 5;
	 */
	qos: number
	/**
	 * @generated from protobuf field: bytes payload = 6;
	 */
	payload: Uint8Array
	/**
	 * @generated from protobuf field: optional uint32 initial_delay_ms = 7;
	 */
	initialDelayMs?: number
	/**
	 * This field was renamed from is_fast_transmission
	 * to reflect official feature name
	 * Set to true if message target is only CB-MAC nodes (Low Latency)
	 *
	 * @generated from protobuf field: optional bool is_unack_csma_ca = 8;
	 */
	isUnackCsmaCa?: boolean
	/**
	 * @generated from protobuf field: optional uint32 hop_limit = 9;
	 */
	hopLimit?: number
}
/**
 * @generated from protobuf message wirepas.proto.gateway_api.SendPacketResp
 */
export interface SendPacketResp {
	/**
	 * @generated from protobuf field: wirepas.proto.gateway_api.ResponseHeader header = 1;
	 */
	header?: ResponseHeader
}
/**
 *
 * Event definition
 *
 * @generated from protobuf message wirepas.proto.gateway_api.PacketReceivedEvent
 */
export interface PacketReceivedEvent {
	/**
	 * @generated from protobuf field: wirepas.proto.gateway_api.EventHeader header = 1;
	 */
	header: EventHeader
	/**
	 * @generated from protobuf field: uint32 source_address = 2;
	 */
	sourceAddress: number
	/**
	 * @generated from protobuf field: uint32 destination_address = 3;
	 */
	destinationAddress: number
	/**
	 * @generated from protobuf field: uint32 source_endpoint = 4;
	 */
	sourceEndpoint: number
	/**
	 * @generated from protobuf field: uint32 destination_endpoint = 5;
	 */
	destinationEndpoint: number
	/**
	 * @generated from protobuf field: uint32 travel_time_ms = 6;
	 */
	travelTimeMs: number
	/**
	 * @generated from protobuf field: uint64 rx_time_ms_epoch = 7;
	 */
	rxTimeMsEpoch: bigint // Reception time of the message on the gateway
	/**
	 * @generated from protobuf field: uint32 qos = 8;
	 */
	qos: number
	/**
	 * @generated from protobuf field: optional bytes payload = 9;
	 */
	payload?: Uint8Array
	/**
	 * @generated from protobuf field: optional uint32 payload_size = 10;
	 */
	payloadSize?: number
	/**
	 * @generated from protobuf field: optional uint32 hop_count = 11;
	 */
	hopCount?: number
}
// @generated message type with reflection information, may provide speed optimized methods
class SendPacketReq$Type extends MessageType<SendPacketReq> {
	constructor() {
		super('wirepas.proto.gateway_api.SendPacketReq', [
			{ no: 1, name: 'header', kind: 'message', T: () => RequestHeader },
			{
				no: 2,
				name: 'destination_address',
				kind: 'scalar',
				T: 13 /*ScalarType.UINT32*/,
			},
			{
				no: 3,
				name: 'source_endpoint',
				kind: 'scalar',
				T: 13 /*ScalarType.UINT32*/,
			},
			{
				no: 4,
				name: 'destination_endpoint',
				kind: 'scalar',
				T: 13 /*ScalarType.UINT32*/,
			},
			{ no: 5, name: 'qos', kind: 'scalar', T: 13 /*ScalarType.UINT32*/ },
			{
				no: 6,
				name: 'payload',
				kind: 'scalar',
				T: 12 /*ScalarType.BYTES*/,
				options: { nanopb: { maxSize: 1024 } },
			},
			{
				no: 7,
				name: 'initial_delay_ms',
				kind: 'scalar',
				opt: true,
				T: 13 /*ScalarType.UINT32*/,
			},
			{
				no: 8,
				name: 'is_unack_csma_ca',
				kind: 'scalar',
				opt: true,
				T: 8 /*ScalarType.BOOL*/,
			},
			{
				no: 9,
				name: 'hop_limit',
				kind: 'scalar',
				opt: true,
				T: 13 /*ScalarType.UINT32*/,
			},
		])
	}
	create(value?: PartialMessage<SendPacketReq>): SendPacketReq {
		const message = {
			destinationAddress: 0,
			sourceEndpoint: 0,
			destinationEndpoint: 0,
			qos: 0,
			payload: new Uint8Array(0),
		}
		globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
			enumerable: false,
			value: this,
		})
		if (value !== undefined)
			reflectionMergePartial<SendPacketReq>(this, message, value)
		return message
	}
	internalBinaryRead(
		reader: IBinaryReader,
		length: number,
		options: BinaryReadOptions,
		target?: SendPacketReq,
	): SendPacketReq {
		let message = target ?? this.create(),
			end = reader.pos + length
		while (reader.pos < end) {
			let [fieldNo, wireType] = reader.tag()
			switch (fieldNo) {
				case /* wirepas.proto.gateway_api.RequestHeader header */ 1:
					message.header = RequestHeader.internalBinaryRead(
						reader,
						reader.uint32(),
						options,
						message.header,
					)
					break
				case /* uint32 destination_address */ 2:
					message.destinationAddress = reader.uint32()
					break
				case /* uint32 source_endpoint */ 3:
					message.sourceEndpoint = reader.uint32()
					break
				case /* uint32 destination_endpoint */ 4:
					message.destinationEndpoint = reader.uint32()
					break
				case /* uint32 qos */ 5:
					message.qos = reader.uint32()
					break
				case /* bytes payload */ 6:
					message.payload = reader.bytes()
					break
				case /* optional uint32 initial_delay_ms */ 7:
					message.initialDelayMs = reader.uint32()
					break
				case /* optional bool is_unack_csma_ca */ 8:
					message.isUnackCsmaCa = reader.bool()
					break
				case /* optional uint32 hop_limit */ 9:
					message.hopLimit = reader.uint32()
					break
				default:
					let u = options.readUnknownField
					if (u === 'throw')
						throw new globalThis.Error(
							`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
						)
					let d = reader.skip(wireType)
					if (u !== false)
						(u === true ? UnknownFieldHandler.onRead : u)(
							this.typeName,
							message,
							fieldNo,
							wireType,
							d,
						)
			}
		}
		return message
	}
	internalBinaryWrite(
		message: SendPacketReq,
		writer: IBinaryWriter,
		options: BinaryWriteOptions,
	): IBinaryWriter {
		/* wirepas.proto.gateway_api.RequestHeader header = 1; */
		if (message.header)
			RequestHeader.internalBinaryWrite(
				message.header,
				writer.tag(1, WireType.LengthDelimited).fork(),
				options,
			).join()
		/* uint32 destination_address = 2; */
		if (message.destinationAddress !== 0)
			writer.tag(2, WireType.Varint).uint32(message.destinationAddress)
		/* uint32 source_endpoint = 3; */
		if (message.sourceEndpoint !== 0)
			writer.tag(3, WireType.Varint).uint32(message.sourceEndpoint)
		/* uint32 destination_endpoint = 4; */
		if (message.destinationEndpoint !== 0)
			writer.tag(4, WireType.Varint).uint32(message.destinationEndpoint)
		/* uint32 qos = 5; */
		if (message.qos !== 0) writer.tag(5, WireType.Varint).uint32(message.qos)
		/* bytes payload = 6; */
		if (message.payload.length)
			writer.tag(6, WireType.LengthDelimited).bytes(message.payload)
		/* optional uint32 initial_delay_ms = 7; */
		if (message.initialDelayMs !== undefined)
			writer.tag(7, WireType.Varint).uint32(message.initialDelayMs)
		/* optional bool is_unack_csma_ca = 8; */
		if (message.isUnackCsmaCa !== undefined)
			writer.tag(8, WireType.Varint).bool(message.isUnackCsmaCa)
		/* optional uint32 hop_limit = 9; */
		if (message.hopLimit !== undefined)
			writer.tag(9, WireType.Varint).uint32(message.hopLimit)
		let u = options.writeUnknownFields
		if (u !== false)
			(u == true ? UnknownFieldHandler.onWrite : u)(
				this.typeName,
				message,
				writer,
			)
		return writer
	}
}
/**
 * @generated MessageType for protobuf message wirepas.proto.gateway_api.SendPacketReq
 */
export const SendPacketReq = new SendPacketReq$Type()
// @generated message type with reflection information, may provide speed optimized methods
class SendPacketResp$Type extends MessageType<SendPacketResp> {
	constructor() {
		super('wirepas.proto.gateway_api.SendPacketResp', [
			{ no: 1, name: 'header', kind: 'message', T: () => ResponseHeader },
		])
	}
	create(value?: PartialMessage<SendPacketResp>): SendPacketResp {
		const message = {}
		globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
			enumerable: false,
			value: this,
		})
		if (value !== undefined)
			reflectionMergePartial<SendPacketResp>(this, message, value)
		return message
	}
	internalBinaryRead(
		reader: IBinaryReader,
		length: number,
		options: BinaryReadOptions,
		target?: SendPacketResp,
	): SendPacketResp {
		let message = target ?? this.create(),
			end = reader.pos + length
		while (reader.pos < end) {
			let [fieldNo, wireType] = reader.tag()
			switch (fieldNo) {
				case /* wirepas.proto.gateway_api.ResponseHeader header */ 1:
					message.header = ResponseHeader.internalBinaryRead(
						reader,
						reader.uint32(),
						options,
						message.header,
					)
					break
				default:
					let u = options.readUnknownField
					if (u === 'throw')
						throw new globalThis.Error(
							`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
						)
					let d = reader.skip(wireType)
					if (u !== false)
						(u === true ? UnknownFieldHandler.onRead : u)(
							this.typeName,
							message,
							fieldNo,
							wireType,
							d,
						)
			}
		}
		return message
	}
	internalBinaryWrite(
		message: SendPacketResp,
		writer: IBinaryWriter,
		options: BinaryWriteOptions,
	): IBinaryWriter {
		/* wirepas.proto.gateway_api.ResponseHeader header = 1; */
		if (message.header)
			ResponseHeader.internalBinaryWrite(
				message.header,
				writer.tag(1, WireType.LengthDelimited).fork(),
				options,
			).join()
		let u = options.writeUnknownFields
		if (u !== false)
			(u == true ? UnknownFieldHandler.onWrite : u)(
				this.typeName,
				message,
				writer,
			)
		return writer
	}
}
/**
 * @generated MessageType for protobuf message wirepas.proto.gateway_api.SendPacketResp
 */
export const SendPacketResp = new SendPacketResp$Type()
// @generated message type with reflection information, may provide speed optimized methods
class PacketReceivedEvent$Type extends MessageType<PacketReceivedEvent> {
	constructor() {
		super('wirepas.proto.gateway_api.PacketReceivedEvent', [
			{ no: 1, name: 'header', kind: 'message', T: () => EventHeader },
			{
				no: 2,
				name: 'source_address',
				kind: 'scalar',
				T: 13 /*ScalarType.UINT32*/,
			},
			{
				no: 3,
				name: 'destination_address',
				kind: 'scalar',
				T: 13 /*ScalarType.UINT32*/,
			},
			{
				no: 4,
				name: 'source_endpoint',
				kind: 'scalar',
				T: 13 /*ScalarType.UINT32*/,
			},
			{
				no: 5,
				name: 'destination_endpoint',
				kind: 'scalar',
				T: 13 /*ScalarType.UINT32*/,
			},
			{
				no: 6,
				name: 'travel_time_ms',
				kind: 'scalar',
				T: 13 /*ScalarType.UINT32*/,
			},
			{
				no: 7,
				name: 'rx_time_ms_epoch',
				kind: 'scalar',
				T: 4 /*ScalarType.UINT64*/,
				L: 0 /*LongType.BIGINT*/,
			},
			{ no: 8, name: 'qos', kind: 'scalar', T: 13 /*ScalarType.UINT32*/ },
			{
				no: 9,
				name: 'payload',
				kind: 'scalar',
				opt: true,
				T: 12 /*ScalarType.BYTES*/,
				options: { nanopb: { maxSize: 1024 } },
			},
			{
				no: 10,
				name: 'payload_size',
				kind: 'scalar',
				opt: true,
				T: 13 /*ScalarType.UINT32*/,
			},
			{
				no: 11,
				name: 'hop_count',
				kind: 'scalar',
				opt: true,
				T: 13 /*ScalarType.UINT32*/,
			},
		])
	}
	create(value?: PartialMessage<PacketReceivedEvent>): PacketReceivedEvent {
		const message = {
			sourceAddress: 0,
			destinationAddress: 0,
			sourceEndpoint: 0,
			destinationEndpoint: 0,
			travelTimeMs: 0,
			rxTimeMsEpoch: 0n,
			qos: 0,
		}
		globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
			enumerable: false,
			value: this,
		})
		if (value !== undefined)
			reflectionMergePartial<PacketReceivedEvent>(this, message, value)
		return message
	}
	internalBinaryRead(
		reader: IBinaryReader,
		length: number,
		options: BinaryReadOptions,
		target?: PacketReceivedEvent,
	): PacketReceivedEvent {
		let message = target ?? this.create(),
			end = reader.pos + length
		while (reader.pos < end) {
			let [fieldNo, wireType] = reader.tag()
			switch (fieldNo) {
				case /* wirepas.proto.gateway_api.EventHeader header */ 1:
					message.header = EventHeader.internalBinaryRead(
						reader,
						reader.uint32(),
						options,
						message.header,
					)
					break
				case /* uint32 source_address */ 2:
					message.sourceAddress = reader.uint32()
					break
				case /* uint32 destination_address */ 3:
					message.destinationAddress = reader.uint32()
					break
				case /* uint32 source_endpoint */ 4:
					message.sourceEndpoint = reader.uint32()
					break
				case /* uint32 destination_endpoint */ 5:
					message.destinationEndpoint = reader.uint32()
					break
				case /* uint32 travel_time_ms */ 6:
					message.travelTimeMs = reader.uint32()
					break
				case /* uint64 rx_time_ms_epoch */ 7:
					message.rxTimeMsEpoch = reader.uint64().toBigInt()
					break
				case /* uint32 qos */ 8:
					message.qos = reader.uint32()
					break
				case /* optional bytes payload */ 9:
					message.payload = reader.bytes()
					break
				case /* optional uint32 payload_size */ 10:
					message.payloadSize = reader.uint32()
					break
				case /* optional uint32 hop_count */ 11:
					message.hopCount = reader.uint32()
					break
				default:
					let u = options.readUnknownField
					if (u === 'throw')
						throw new globalThis.Error(
							`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
						)
					let d = reader.skip(wireType)
					if (u !== false)
						(u === true ? UnknownFieldHandler.onRead : u)(
							this.typeName,
							message,
							fieldNo,
							wireType,
							d,
						)
			}
		}
		return message
	}
	internalBinaryWrite(
		message: PacketReceivedEvent,
		writer: IBinaryWriter,
		options: BinaryWriteOptions,
	): IBinaryWriter {
		/* wirepas.proto.gateway_api.EventHeader header = 1; */
		if (message.header)
			EventHeader.internalBinaryWrite(
				message.header,
				writer.tag(1, WireType.LengthDelimited).fork(),
				options,
			).join()
		/* uint32 source_address = 2; */
		if (message.sourceAddress !== 0)
			writer.tag(2, WireType.Varint).uint32(message.sourceAddress)
		/* uint32 destination_address = 3; */
		if (message.destinationAddress !== 0)
			writer.tag(3, WireType.Varint).uint32(message.destinationAddress)
		/* uint32 source_endpoint = 4; */
		if (message.sourceEndpoint !== 0)
			writer.tag(4, WireType.Varint).uint32(message.sourceEndpoint)
		/* uint32 destination_endpoint = 5; */
		if (message.destinationEndpoint !== 0)
			writer.tag(5, WireType.Varint).uint32(message.destinationEndpoint)
		/* uint32 travel_time_ms = 6; */
		if (message.travelTimeMs !== 0)
			writer.tag(6, WireType.Varint).uint32(message.travelTimeMs)
		/* uint64 rx_time_ms_epoch = 7; */
		if (message.rxTimeMsEpoch !== 0n)
			writer.tag(7, WireType.Varint).uint64(message.rxTimeMsEpoch)
		/* uint32 qos = 8; */
		if (message.qos !== 0) writer.tag(8, WireType.Varint).uint32(message.qos)
		/* optional bytes payload = 9; */
		if (message.payload !== undefined)
			writer.tag(9, WireType.LengthDelimited).bytes(message.payload)
		/* optional uint32 payload_size = 10; */
		if (message.payloadSize !== undefined)
			writer.tag(10, WireType.Varint).uint32(message.payloadSize)
		/* optional uint32 hop_count = 11; */
		if (message.hopCount !== undefined)
			writer.tag(11, WireType.Varint).uint32(message.hopCount)
		let u = options.writeUnknownFields
		if (u !== false)
			(u == true ? UnknownFieldHandler.onWrite : u)(
				this.typeName,
				message,
				writer,
			)
		return writer
	}
}
/**
 * @generated MessageType for protobuf message wirepas.proto.gateway_api.PacketReceivedEvent
 */
export const PacketReceivedEvent = new PacketReceivedEvent$Type()
